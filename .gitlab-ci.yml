stages:
  - build
  - deploy_tst
  - deploy_prd
  - sonarqube-check

variables:
  PROJECT_PATH: workshop_2/backend/bsn
  DOCKER_IMAGE_NAME: hva-bsn

build:
  tags:
    - hva
  image: docker:latest
  stage: build
  script:
    - echo "Building the application..."
    - docker build -t $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME $PROJECT_PATH
    - docker tag $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_REF_SLUG

deploy_tst:
  tags:
    - hva
  stage: deploy_tst
  image: docker:latest
  script:
    - echo "Deploying to test environment..."
    - docker push $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:test
  only:
    - main # Assuming 'develop' branch is used for testing

deploy_prd:
  tags:
    - hva
  stage: deploy_prd
  image: docker:latest
  script:
    - echo "Deploying to production environment..."
    - docker push $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:latest
  when: manual # Manual trigger for production deployment
  only:
    - main # Assuming 'main' branch is for production releases


sonarqube-check:
  tags:
    - hva
  stage: sonarqube-check
  image: gradle:8.2.0-jdk17-jammy
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd workshop_2/backend/bsn
    - gradle sonar
  allow_failure: true
  only:
    - merge_requests
    - main