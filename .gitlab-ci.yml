stages:
  - build
  - test
  - deploy_tst
  - deploy_prd
  - sonarqube-check

default:
  tags:
    - devmart

services:
  - docker:dind

variables:
  PROJECT_PATH: workshop_2/backend/bsn
  DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE/$CI_PROJECT_NAME
  IMAGE_TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  APP_NAME: hva-bsn
  DOCKER_TLS_CERTDIR: ""

before_script:
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY

build:
  image: docker:19.03.12
  stage: build
  script:
    - docker build -t $DOCKER_IMAGE_NAME:$IMAGE_TAG $PROJECT_PATH
    - docker push $DOCKER_IMAGE_NAME:$IMAGE_TAG

test:
  image: docker:19.03.12
  stage: test
#  before_script:
#    - apt-get update && apt-get install -y docker.io
#    - docker --version
#    - gradle -v
  script:
    - cd $PROJECT_PATH
    - chmod +x ./gradlew
    - ./gradlew test

deploy_tst:
  image: docker:19.03.12
  stage: deploy_tst
  script:
    - docker pull $DOCKER_IMAGE_NAME:$IMAGE_TAG
    - docker stop $APP_NAME-testing && docker rm $APP_NAME-testing || true
    - docker run -d --name $APP_NAME-testing -p 8080:8080 $DOCKER_IMAGE_NAME:$IMAGE_TAG
  environment:
    name: testing
    url: https://$APP_NAME-testing.devmart.net

deploy_prd:
  image: docker:19.03.12
  stage: deploy_prd
  script:
    - docker pull $DOCKER_IMAGE_NAME:$IMAGE_TAG
    - docker stop $APP_NAME-latest && docker rm $APP_NAME-latest || true
    - docker tag $DOCKER_IMAGE_NAME:$IMAGE_TAG $DOCKER_IMAGE_NAME:latest
    - docker run -d --name $APP_NAME-latest -p 8081:8080 $DOCKER_IMAGE_NAME:latest # Reroute container's 8080 port to host's 8081 port
  when: manual # Manual trigger for production deployment
  only:
    - main # Assuming 'main' branch is for production releases

sonarqube-check:
  stage: sonarqube-check
  image: gradle:8.2.0-jdk17-jammy
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd $PROJECT_PATH
    - gradle sonar
  allow_failure: true
  only:
    - merge_requests
    - main